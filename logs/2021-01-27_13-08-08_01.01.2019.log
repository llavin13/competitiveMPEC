RT is False
Default write of storage_offers_DA.csv just to have a file (but constraint should be inactive)
Reading model...
...model read.
creating competitive generators file...
...competitive generators recorded.
Loading data...
.. day-ahead data read.
Compiling instance...
...instance created.
Creating Offer Mitigation (model will solve as dispatch if TRUE)...
NOTE: storage offers will not be mitigated
...storage offer mitigation file created
Converting model to MPEC...
...converted
MIP
NOTE: initial MIP solve with only storage competitive to get feasible solution
Solving...

Welcome to IBM(R) ILOG(R) CPLEX(R) Interactive Optimizer 12.9.0.0
  with Simplex, Mixed Integer & Barrier Optimizers
5725-A06 5725-A29 5724-Y48 5724-Y49 5724-Y54 5724-Y55 5655-Y21
Copyright IBM Corp. 1988, 2019.  All Rights Reserved.

Type 'help' for a list of available commands.
Type 'help' followed by a command name for more
information on commands.

CPLEX> Logfile 'cplex.log' closed.
Logfile 'C:\Users\Luke\Desktop\competitiveMPEC_1.16\logs\tmpv532zcf3.cplex.log' open.
CPLEX> New value for parallel optimization mode: -1
CPLEX> New value for mixed integer optimality gap tolerance: 0.01
CPLEX> New value for feasibility tolerance: 1e-05
CPLEX> New value for deterministic time limit in ticks: 350000
CPLEX> Problem 'C:\Users\Luke\Desktop\competitiveMPEC_1.16\logs\tmpvo9muyuq.pyomo.lp' read.
Read time = 0.19 sec. (13.82 ticks)
CPLEX> Problem name         : C:\Users\Luke\Desktop\competitiveMPEC_1.16\logs\tmpvo9muyuq.pyomo.lp
Objective sense      : Maximize
Variables            :   53275  [Nneg: 889,  Box: 21808,  Free: 3480,
                                 Binary: 27098]
Objective nonzeros   :    8921
Linear constraints   :  122140  [Less: 40959,  Greater: 58612,  Equal: 22569]
  Nonzeros           :  288422
  RHS nonzeros       :   66947

Variables            : Min LB: -5000.000        Max UB: 5000.000       
Objective nonzeros   : Min   : 0.1000000        Max   : 795.1000       
Linear constraints   :
  Nonzeros           : Min   : 0.1000000        Max   : 2910000.       
  RHS nonzeros       : Min   : 0.1000000        Max   : 3000000.       
CPLEX> CPXPARAM_Parallel                                -1
CPXPARAM_Simplex_Tolerances_Feasibility          1.0000000000000001e-05
CPXPARAM_DetTimeLimit                            350000
CPXPARAM_MIP_Tolerances_MIPGap                   0.01
Tried aggregator 3 times.
MIP Presolve eliminated 88265 rows and 19095 columns.
MIP Presolve added 3313 rows and 0 columns.
MIP Presolve modified 24456 coefficients.
Aggregator did 12833 substitutions.
Reduced MIP has 24355 rows, 20765 columns, and 68305 nonzeros.
Reduced MIP has 8218 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.25 sec. (165.90 ticks)
Probing fixed 412 vars, tightened 5924 bounds.
Probing time = 0.05 sec. (20.60 ticks)
Tried aggregator 2 times.
MIP Presolve eliminated 920 rows and 826 columns.
MIP Presolve modified 2969 coefficients.
Aggregator did 46 substitutions.
Reduced MIP has 23389 rows, 19893 columns, and 65501 nonzeros.
Reduced MIP has 7805 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.11 sec. (88.46 ticks)
Probing fixed 0 vars, tightened 200 bounds.
Probing time = 0.08 sec. (21.08 ticks)
Clique table members: 38109.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: opportunistic, using up to 24 threads.
Root relaxation solution time = 0.38 sec. (603.87 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0    95952.1260   263                  95952.1260     5915         
      0     0    95133.4703   115                   Cuts: 276     6088         
      0     0    95095.6755   110                   Cuts: 141     6161         
      0     0    95055.9950   100                    Cuts: 70     6189         
      0     0    95055.9950    98                     Cuts: 8     6193         
      0     0    95055.9950    77                 Flowcuts: 6     6197         
      0     0    95055.9950    78                 Flowcuts: 1     6198         
      0     2    95055.9950    78                     Cuts: 5     6198         
Elapsed time = 4.63 sec. (3098.27 ticks, tree = 0.02 MB, solutions = 0)
    322   133    93802.2384    46                  94133.7895     6812         
    758   326    93314.0421    38                  94129.5609     8305         
   1158   788    90285.3641    44                  94129.5609    14266         
   1658  1312    infeasible                        94129.5609    27221         
   2206  1418    infeasible                        94129.5609    29906         
   2692  1767    85830.1973    56                  94129.5609    40244         
   3024  1959    90361.7448    56                  94129.5609    46774         
   3431  2263    40645.6766    85                  94129.5609    56646         
   3864  2362    92445.3985    52                  94129.5609    60692         
   5140  3497    60328.2206    78                  94097.5594    99957         
Elapsed time = 12.50 sec. (6205.73 ticks, tree = 76.41 MB, solutions = 0)
   5156  3841    infeasible                        93947.5543   122694         
   5670   199    89526.9116    48                  93947.5543   126846         
   6646   757    82375.8908    29                  93947.5543   139036         
   8073  1688    84761.6911    69                  93865.0717   156004         
  10263  3112    55144.4657    51                  93183.6922   188347         
  11743  4677    80749.4655    27                  93183.6922   212977         
  13592  6484    80326.2637    21                  92876.0296   250542         
  15785  7640    76751.1254    23                  92876.0296   271383         
  17637  9488    78158.6573    57                  92876.0296   305603         
  19346 10621    69684.9016    55                  92876.0296   336790         
Elapsed time = 51.97 sec. (19559.27 ticks, tree = 100.33 MB, solutions = 0)
  21244 12366    91006.5955    71                  92876.0296   389203         
  23166 13592    21789.1882    61                  92876.0296   426199         
  25240 14793    52057.6212    32                  92876.0296   454810         
  26851 17121    73735.4485    10                  92876.0296   506152         
  28578 18094    74194.0699    60                  92876.0296   535854         
* 29235+13312                        66456.9242    92876.0296            39.75%
  31439 13927    72726.9484    29    66456.9242    92876.0296   615886   39.75%
  33421 14370    81927.5027   120    66477.7676    92876.0296   626580   39.71%
  35131 15897    90096.7252    71    66477.7676    92876.0296   662327   39.71%
  37147 17261    70709.7541    44    66477.7676    92876.0296   694597   39.71%
Elapsed time = 101.91 sec. (28478.59 ticks, tree = 196.70 MB, solutions = 2)
  39150 18289    77907.1542    54    66477.7676    92876.0296   719686   39.71%
  41062 19686    74635.9177    43    66477.7676    92876.0296   761997   39.71%
  43013 20666    77184.1292    42    66477.7676    92876.0296   789702   39.71%
  44292 22767    74655.2336    41    66477.7676    90895.2836   843712   36.73%
  45512 22858    71105.1018    42    66477.7676    90895.2836   844942   36.73%
  46860 23477    68236.2454    24    66477.7676    90895.2836   862422   36.73%
  48242 24471    infeasible          66477.7676    90895.2836   890421   36.73%
  49286 24950    70666.3035    37    66477.7676    90895.2836   904045   36.73%
  50336 25813    68983.1864    25    66477.7676    90895.2836   928410   36.73%
  51719 26558    90386.7975    63    66477.7676    90895.2836   949945   36.73%
Elapsed time = 320.81 sec. (38020.32 ticks, tree = 275.64 MB, solutions = 2)
  53302 27250    75662.0398    55    66477.7676    90895.2836   971843   36.73%
  54824 113515    70284.8938    32    66477.7676    90895.2836  2317668   36.73%
  56509 124480    70473.4854    85    66477.7676    90895.2836  2526600   36.73%
  58399 113722    71164.4004    79    66477.7676    90895.2836  2320724   36.73%
  60697 29976    69026.7134    36    66477.7676    90895.2836  1034714   36.73%
  63093 113917    88690.4005    47    66477.7676    90895.2836  2324062   36.73%
  65417 122559    79021.2380    54    66477.7676    90895.2836  2484347   36.73%
  67833 33368    68931.4789    10    66477.7676    90386.7975  1108225   35.97%
  70569 33636    68936.8049    13    66477.7676    90386.7975  1112433   35.97%
  73465 34058    70120.6775    35    66477.7676    90386.7975  1121398   35.97%
Elapsed time = 438.31 sec. (47560.48 ticks, tree = 335.96 MB, solutions = 2)
  76416 125064        cutoff          66477.7676    90386.7975  2537511   35.97%
  79142 37302    69880.7677    41    66477.7676    90386.7975  1170776   35.97%
  81742 126382    67044.6969    14    66477.7676    90386.7975  2554929   35.97%
  84253 125344    67331.2895    30    66477.7676    90386.7975  2542421   35.97%
  87201 122559    68392.8732    27    66477.7676    90386.7975  2488921   35.97%
  90276 154146    72293.8825    69    66477.7676    90386.7975  3023702   35.97%
  93288 125633    75455.3065    72    66477.7676    90386.7975  2546501   35.97%
  96233 43985    70030.7667    19    66477.7676    90386.7975  1242575   35.97%
  99082 45335    70167.6455    19    66477.7676    90386.7975  1259063   35.97%
 101820 154463        cutoff          66477.7676    90386.7975  3029335   35.97%
Elapsed time = 460.53 sec. (57103.52 ticks, tree = 1289.33 MB, solutions = 2)
 104595 115325    72628.3962    69    66477.7676    90386.7975  2348449   35.97%
 107610 49304        cutoff          66477.7676    90386.7975  1301469   35.97%
 110482 123579    68547.5041    26    66477.7676    90386.7975  2509196   35.97%
 113272 123840    87943.0513    86    66477.7676    90386.7975  2505224   35.97%
 116052 53418    88941.9251    92    66477.7676    90386.7975  1348951   35.97%
 118658 154869    70215.0696    73    66477.7676    90386.7975  3040695   35.97%
 121222 56456    68553.4649    29    66477.7676    90386.7975  1387112   35.97%
 123924 58171    70189.5177    28    66477.7676    90386.7975  1410456   35.97%
 126599 59597    68056.4194    19    66477.7676    90386.7975  1430596   35.97%
 129233 58668    67102.2650    18    66477.7676    90386.7975  1418201   35.97%
Elapsed time = 481.25 sec. (66644.88 ticks, tree = 528.30 MB, solutions = 2)
 131827 60568    66955.4222    17    66477.7676    90386.7975  1449717   35.97%
 134500 128093        cutoff          66477.7676    90386.7975  2582850   35.97%
 137435 151697    67731.3666    43    66477.7676    90386.7975  2993584   35.97%
 140577 63834    70101.1607    29    66477.7676    90386.7975  1493542   35.97%
 143589 127304    87537.4730    90    66477.7676    90386.7975  2572695   35.97%
 146380 64973    82582.5575    92    66477.7676    90386.7975  1514039   35.97%
 149040 67077        cutoff          66477.7676    90386.7975  1540629   35.97%
 151768 68246    68474.5117    13    66477.7676    90386.7975  1556756   35.97%
 154554 69423    67776.7337    38    66477.7676    90386.7975  1579568   35.97%
 157409 70791    70650.4031    27    66477.7676    90386.7975  1604665   35.97%
Elapsed time = 499.81 sec. (76185.31 ticks, tree = 627.01 MB, solutions = 2)
 160189 70913    69332.6122    21    66477.7676    90386.7975  1605872   35.97%
 163015 152583        cutoff          66477.7676    90386.7975  3006246   35.97%
 165659 127891    67084.2401    25    66477.7676    90386.7975  2585446   35.97%
 168318 75343    87303.4042    76    66477.7676    90386.7975  1691820   35.97%
 170994 128052    74224.9383    51    66477.7676    90386.7975  2588647   35.97%
 173632 77013    88380.5737    68    66477.7676    90386.7975  1724633   35.97%
 176304 77140    67533.3476    34    66477.7676    90386.7975  1725416   35.97%
 179049 118032    68667.1312    38    66477.7676    90386.7975  2387896   35.97%
 181844 129718    66712.2550    37    66477.7676    90386.7975  2606103   35.97%
 184581 81101    70587.8310    38    66477.7676    90386.7975  1779814   35.97%
Elapsed time = 517.03 sec. (85726.45 ticks, tree = 709.31 MB, solutions = 2)
 187387 125295        cutoff          66477.7676    90386.7975  2539874   35.97%
 190115 123430        cutoff          66477.7676    90386.7975  2518573   35.97%
 192468 84951    68453.5573    23    66477.7676    90386.7975  1839131   35.97%
 195014 84122    69748.5505    39    66477.7676    90386.7975  1821439   35.97%
 197432 123562    83990.4389    66    66477.7676    90386.7975  2524848   35.97%
 199659 89407    69574.5383    27    66477.7676    90386.7975  1900355   35.97%
 202011 129044    74159.6535    65    66477.7676    90386.7975  2606119   35.97%
 204231 88576    70569.3261    55    66477.7676    90386.7975  1891030   35.97%
 206592 125811    67540.0172    17    66477.7676    90386.7975  2552837   35.97%
 215624 97336    69428.6694    42    66477.7676    90386.7975  2023006   35.97%
Elapsed time = 522.23 sec. (98127.75 ticks, tree = 838.67 MB, solutions = 2)
 224187 100908    69911.9933    41    66477.7676    90386.7975  2097371   35.97%
 232519 105096    72952.7995    41    66477.7676    90386.7975  2173162   35.97%
 240400 126975    68763.1003    30    66477.7676    90386.7975  2578314   35.97%
 249217 112612    72992.6291    44    66477.7676    90386.7975  2304608   35.97%
 257510 132483    72041.7591    57    66477.7676    90386.7975  2655694   35.97%
 264466 120522    68538.1895    34    66477.7676    90386.7975  2441017   35.97%
 270397 125011    77082.2869    56    66477.7676    90386.7975  2534030   35.97%
 276623 131792    69484.2062   111    66477.7676    90386.7975  2643309   35.97%
 283178 132056    66568.4664    28    66477.7676    90386.7975  2650642   35.97%
 289260 138196    68821.1509    36    66477.7676    90386.7975  2754120   35.97%
Elapsed time = 540.41 sec. (136281.60 ticks, tree = 1160.79 MB, solutions = 2)
 295024 141406    82012.3349    57    66477.7676    90386.7975  2819633   35.97%
 301186 148478    71553.7725    60    66477.7676    90386.7975  2932607   35.97%
 307636 147616    68840.5666    21    66477.7676    90386.7975  2918893   35.97%
 312678 152907    73804.2275    34    66477.7676    90386.7975  3005462   35.97%
 313370 218266    92015.7652    59    66477.7676    88689.3389  4288887   33.41%
 315537   620    69237.4921   141    66477.7676    88689.3389  4303506   33.41%
 320425  3058    87486.1285    54    66477.7676    88689.3389  4347956   33.41%
 325193  7204    66648.6375    21    66499.2341    88689.3389  4411056   33.37%
 330757 11804    84362.2501    51    66499.2341    88689.3389  4490477   33.37%
 336956 15310    69202.5846    42    66499.2341    88689.3389  4546396   33.37%
Elapsed time = 601.22 sec. (178152.65 ticks, tree = 145.48 MB, solutions = 8)
 343087 18780    79405.3134    66    66499.2341    88689.3389  4604820   33.37%
 348863 25129    69927.2422    39    66499.2341    88689.3389  4705966   33.37%
 357848 29008    68376.7368    43    66499.2341    88689.3389  4760944   33.37%
 362527 36302    70233.9419    41    66499.2341    88689.3389  4854148   33.37%
 371168 40263    70523.4275    54    66499.2341    88689.3389  4901810   33.37%
 375705 46889    66703.5706    53    66499.2341    88689.3389  4998140   33.37%
 384669 51523    73903.7735    68    66499.2341    88689.3389  5062663   33.37%
 388587 56040    89034.1664    59    66499.2341    88689.3389  5143025   33.37%
 397549 60043    67692.9561    29    66499.2341    88689.3389  5209025   33.37%
 401943 65269    69531.1261    40    66499.2341    88689.3389  5306045   33.37%
Elapsed time = 691.86 sec. (216303.77 ticks, tree = 534.38 MB, solutions = 8)
 411245 68359    80154.6156   117    66499.2341    88689.3389  5359808   33.37%
 416453 76698    69432.2724    32    66499.2341    88689.3389  5495018   33.37%
 421866 80891    85178.5127    97    66499.2341    88689.3389  5564495   33.37%
 430413 83011    68357.7715    31    66499.2341    88689.3389  5602830   33.37%
 434575 88930    71660.2967    46    66499.2341    88689.3389  5707656   33.37%
 440583 92166    66703.4290    48    66499.2341    88689.3389  5761209   33.37%
 447560 100011    66588.9035    53    66499.2341    88689.3389  5929006   33.37%
 451196 101405    68087.5591    23    66499.2341    88689.3389  5957037   33.37%
 458202 106509    67446.9044    58    66499.2341    88599.5257  6049503   33.23%
 465647 111786    68066.7314    10    66499.2341    88537.3305  6126128   33.14%
Elapsed time = 794.92 sec. (254457.43 ticks, tree = 900.99 MB, solutions = 8)
 469955 114471    78898.4546    56    66499.2341    88443.6643  6167214   33.00%
 478778 118746    77926.0005    68    66499.2341    88429.5541  6239445   32.98%
 484408 125981    66695.8807    45    66499.2341    88410.2382  6351187   32.95%
 489918 127672        cutoff          66499.2341    88410.2382  6374296   32.95%
 499757 133387    82426.0957    58    66499.2341    88309.1117  6459167   32.80%
 504165 141495    70233.9419    74    66499.2341    88309.1117  6582495   32.80%
 511213 143607    82410.1121    96    66499.2341    88257.7576  6611397   32.72%
 520673 149172    75234.4756    58    66499.2341    88195.0281  6690824   32.63%
 524674 156063    77212.1943   107    66499.2341    88139.4075  6798601   32.54%
 531989 157527    75051.3630    66    66499.2341    88069.0218  6824972   32.44%
Elapsed time = 897.16 sec. (292611.18 ticks, tree = 1267.28 MB, solutions = 8)
 539751 166020    67586.8751    60    66499.2341    88041.3190  6969579   32.39%
 543598 170083    70989.6066    64    66499.2341    87982.4359  7034335   32.31%
 551585 172779    66840.1905    52    66499.2341    87927.2263  7083930   32.22%
 558749 179520    67882.5201    55    66499.2341    87879.0358  7221698   32.15%
 562560 182437    68770.1806    57    66499.2341    87829.7651  7275861   32.08%
 570582 183847    69294.2869    61    66499.2341    87813.4376  7303743   32.05%
 577981 192149        cutoff          66499.2341    87782.2924  7435108   32.00%
 581719 195475    68442.5849    50    66499.2341    87727.2788  7499290   31.92%
 588784 199025    72385.1562    80    66499.2341    87709.3227  7551367   31.90%
 596923 204990    67862.5564    52    66499.2341    87670.5030  7636338   31.84%
Elapsed time = 1020.20 sec. (330767.17 ticks, tree = 1649.17 MB, solutions = 8)
 601129 210241    67056.7818    65    66499.2341    87618.5261  7718037   31.76%
 607847 213990    67542.1364    49    66499.2341    87568.6649  7777991   31.68%
 617371 218871    82487.2940    83    66499.2341    87542.9456  7852359   31.65%
 621957 222723    66646.2053    41    66499.2341    87523.8441  7901331   31.62%
 625032 227712    67048.8818    60    66499.2341    87523.8441  7980460   31.62%

Clique cuts applied:  3
Cover cuts applied:  98
Implied bound cuts applied:  11
Flow cuts applied:  128
Mixed integer rounding cuts applied:  9
Lift and project cuts applied:  5
Gomory fractional cuts applied:  19

Root node processing (before b&c):
  Real time             =    4.01 sec. (3047.35 ticks)
Parallel b&c, 24 threads:
  Real time             = 1068.09 sec. (346968.11 ticks)
  Sync time (average)   =    1.46 sec.
  Wait time (average)   =    0.22 sec.
                          ------------
Total (root+branch&cut) = 1072.11 sec. (350015.46 ticks)

Solution pool: 8 solutions saved.

MIP - Deterministic time limit exceeded, integer feasible:  Objective =  6.6499234129e+04
Current MIP best bound =  8.7517376138e+04 (gap = 21018.1, 31.61%)
Solution time = 1072.13 sec.  Iterations = 8029823  Nodes = 625081 (230842)
Deterministic time = 350015.61 ticks  (326.47 ticks/sec)

CPLEX> Incumbent solution written to file 'C:\Users\Luke\Desktop\competitiveMPEC_1.16\logs\tmpz1m_hdul.cplex.sol'.
CPLEX> Exporting results... 
ERROR exporting storage! Check export_storage().
Traceback (most recent call last):
  File "c:\Users\Luke\Desktop\competitiveMPEC_1.16\write_results_competitive.py", line 128, in export_results
    instance, timepoints_set, storage_set, results_directory, is_MPEC
  File "c:\Users\Luke\Desktop\competitiveMPEC_1.16\write_results_competitive.py", line 756, in export_storage
    storage_offer.append(format_6f(instance.sodischarge[t, s].value))
  File "C:\ProgramData\Anaconda3\lib\site-packages\pyomo\core\base\indexed_component.py", line 407, in __getitem__
    validated_index = self._validate_index(index)
  File "C:\ProgramData\Anaconda3\lib\site-packages\pyomo\core\base\indexed_component.py", line 567, in _validate_index
    % ( idx, self.name, ))
KeyError: "Index '(1, '313_STORAGE_1')' is not valid for indexed component 'sodischarge'"


           Launching Python debugger (PDB)...
           To execute multi-line statements in PDB, type this:
                import code; code.interact(local=vars())
           (The command launches an interactive Python session with all the local variables available.)
           To exit the interactive session and continue script execution, press Ctrl+D.
           
> c:\programdata\anaconda3\lib\site-packages\pyomo\core\base\indexed_component.py(567)_validate_index()
-> % ( idx, self.name, ))
(Pdb) 