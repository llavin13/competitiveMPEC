RT is False
Default write of storage_offers_DA.csv just to have a file (but constraint should be inactive)
Reading model...
...model read.
creating competitive generators file...
...competitive generators recorded.
Loading data...
.. day-ahead data read.
Compiling instance...
...instance created.
Creating Offer Mitigation (model will solve as dispatch if TRUE)...
...storage offer mitigation file created
Converting model to MPEC...
...converted
MIP
NOTE: initial MIP solve with only storage competitive to get feasible solution
Solving...

Welcome to IBM(R) ILOG(R) CPLEX(R) Interactive Optimizer 12.9.0.0
  with Simplex, Mixed Integer & Barrier Optimizers
5725-A06 5725-A29 5724-Y48 5724-Y49 5724-Y54 5724-Y55 5655-Y21
Copyright IBM Corp. 1988, 2019.  All Rights Reserved.

Type 'help' for a list of available commands.
Type 'help' followed by a command name for more
information on commands.

CPLEX> Logfile 'cplex.log' closed.
Logfile 'C:\Users\llavin\Desktop\competitiveMPEC_dev1.27\logs\tmpl80fp9j2.cplex.log' open.
CPLEX> New value for parallel optimization mode: -1
CPLEX> New value for mixed integer optimality gap tolerance: 0.01
CPLEX> New value for feasibility tolerance: 0.0001
CPLEX> New value for deterministic time limit in ticks: 150000
CPLEX> Problem 'C:\Users\llavin\Desktop\competitiveMPEC_dev1.27\logs\tmpc91xdaas.pyomo.lp' read.
Read time = 0.23 sec. (13.82 ticks)
CPLEX> Problem name         : C:\Users\llavin\Desktop\competitiveMPEC_dev1.27\logs\tmpc91xdaas.pyomo.lp
Objective sense      : Maximize
Variables            :   53321  [Nneg: 889,  Box: 21854,  Free: 3480,
                                 Binary: 27098]
Objective nonzeros   :    8904
Linear constraints   :  122140  [Less: 40959,  Greater: 58612,  Equal: 22569]
  Nonzeros           :  288399
  RHS nonzeros       :   66924

Variables            : Min LB: -5000.000        Max UB: 5000.000       
Objective nonzeros   : Min   : 0.1000000        Max   : 722.0000       
Linear constraints   :
  Nonzeros           : Min   : 0.1000000        Max   : 1960000.       
  RHS nonzeros       : Min   : 0.1000000        Max   : 2000000.       
CPLEX> CPXPARAM_Parallel                                -1
CPXPARAM_Simplex_Tolerances_Feasibility          0.0001
CPXPARAM_DetTimeLimit                            150000
CPXPARAM_MIP_Tolerances_MIPGap                   0.01
Tried aggregator 3 times.
MIP Presolve eliminated 88375 rows and 19200 columns.
MIP Presolve added 3313 rows and 0 columns.
MIP Presolve modified 24404 coefficients.
Aggregator did 12809 substitutions.
Reduced MIP has 24269 rows, 20725 columns, and 68049 nonzeros.
Reduced MIP has 8174 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.31 sec. (165.79 ticks)
Probing fixed 425 vars, tightened 6011 bounds.
Probing time = 0.08 sec. (20.92 ticks)
Tried aggregator 2 times.
MIP Presolve eliminated 944 rows and 852 columns.
MIP Presolve modified 2946 coefficients.
Aggregator did 51 substitutions.
Reduced MIP has 23274 rows, 19822 columns, and 65156 nonzeros.
Reduced MIP has 7748 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.14 sec. (88.67 ticks)
Probing fixed 0 vars, tightened 211 bounds.
Probing time = 0.11 sec. (20.65 ticks)
Clique table members: 38279.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: opportunistic, using up to 32 threads.
Root relaxation solution time = 0.63 sec. (692.65 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0   105383.7827   298                 105383.7827     6459         
      0     0   104136.8549   120                   Cuts: 179     6652         
      0     0   103784.0902   106                    Cuts: 71     6722         
      0     0   103769.9040    99                    Cuts: 24     6749         
      0     0   103747.5165   103                    Cuts: 22     6777         
      0     0   103722.1064    96                    Cuts: 12     6788         
      0     0   103701.0064   101                Flowcuts: 10     6800         
      0     0   103699.9277   104                  MIRcuts: 1     6802         
      0     0   103698.2257    97                 Flowcuts: 1     6803         
      0     2   103698.2257    97                     Cuts: 5     6803         
Elapsed time = 7.98 sec. (3843.68 ticks, tree = 0.02 MB, solutions = 0)
    434   134    96781.0144    86                 101255.7153     8918         
    970   312    79796.3613    67                 101255.7153     9950         
   1598   526    infeasible                       101255.7153    13353         
   2283  1016    89810.5601    42                 101255.7153    22195         
   2996  2206    76594.9438    29                 101255.7153    36599         
   3662  2569    70086.3622    44                 101255.7153    44075         
   4291  2727    infeasible                       101255.7153    48201         
   4847  3148    33641.7776    16                 101255.7153    56166         
   5334  3887    95612.5632    57                 101255.7153    71710         
   7337  5647    90080.2060    73                 101255.7153   111092         
Elapsed time = 25.16 sec. (6947.14 ticks, tree = 40.51 MB, solutions = 0)
   8516  7386    91016.9081    84                 101255.7153   161478         
   9125   157  -132725.9911    96                 101255.7153   164553         
  10456   725    94107.2654    51                 100891.1289   173729         
  12581  3302    90191.4243    24                 100891.1289   227752         
  14723  2353    95673.2231    77                 100891.1289   206361         
  17197  3350    92006.4880   106                 100631.1075   231569         
  19585  6184    97669.7997    68                 100631.1075   309176         
  22010  7238    85629.1337    15                 100488.4414   324938         
  24579  7679    87223.3963    73                 100488.4414   337720         
  26996 12005    92813.5438    71                 100488.4414   429425         
Elapsed time = 99.19 sec. (21108.81 ticks, tree = 92.04 MB, solutions = 1)
* 27142+12030                        86614.9724   100451.7016            15.97%
  30268 11970    87929.0226     3    86614.9724   100451.7016   427989   15.97%
  33458 13077    infeasible          86614.9724   100451.7016   453382   15.97%
  36551 12770    90314.0589     9    86614.9724   100451.7016   448717   15.97%
  40009 14833    85706.9170     5    86614.9724   100451.7016   490040   15.97%
  43652 12183    93142.8402    49    86614.9724   100451.7016   577928   15.97%
  47186 12443    96464.0447    60    86614.9724   100451.7016   582229   15.97%
  50414 15204    93720.4240    72    86614.9724   100451.7016   666494   15.97%
  53259 19898    89509.2907    73    86614.9724   100451.7016   719543   15.97%
* 54661+24369                        87036.2288    99111.7934            13.87%
* 54782+24369                        87059.6917    99111.7934            13.84%
  56182 21156    91336.3489    35    87059.6917    99111.7934   729879   13.84%
Elapsed time = 147.02 sec. (29749.39 ticks, tree = 162.99 MB, solutions = 1)
  58392 22242    87619.0374    21    87059.6917    98511.7166   739407   13.15%
  60611 21558    90337.8696    27    87059.6917    98511.7166   735103   13.15%
  63010 28896    86722.7031     4    87059.6917    98460.3147   789343   13.10%
* 63045+25346                        87955.4372    98460.3147            11.94%
* 63991+25346                        87978.9002    98437.5546            11.89%
  65023 31008    96143.9150    58    87978.9002    98437.5546   804664   11.89%
  67305 34919    94525.5231    41    87978.9002    98437.5546   831057   11.89%
* 68609+24777                        88947.2423    98437.5546            10.67%
  69504 33086    96859.3444    50    88947.2423    98437.5546   819957   10.67%
  71710 34840    93211.8844    33    88947.2423    98437.5546   830590   10.67%
* 72276+24777                        89118.4000    98437.5546            10.46%
* 72770+24777                        89375.0848    98437.5546            10.14%
  74072 35961    86821.5004     1    89375.0848    98437.5546   837583   10.14%
* 74458+24777                        89456.0261    98437.5546            10.04%
  76584 36798    89620.5497    49    93317.8811    98437.5546   842195    5.49%
  79431 42580    95614.2049    43    93317.8811    98437.5546   878127    5.49%
Elapsed time = 305.23 sec. (39290.00 ticks, tree = 340.72 MB, solutions = 20)
  81955 51754    93423.6438    16    93317.8811    98437.5546  1370007    5.49%
  84797 51114    91666.4831    26    93317.8811    98437.5546   924582    5.49%
  87975 46897    94163.3539    28    93463.1361    98413.1185   902778    5.30%
  91358 48912    92234.7502    39    93463.1361    98413.1185   911415    5.30%
  95159 54523    87308.9015     4    93463.1361    98413.1185   944817    5.30%
  99384 38465    93634.2949    31    93463.1361    98413.1185  1285504    5.30%
 103286 52952    86810.2081     7    93463.1361    98413.1185   934118    5.30%
 107321 53505    92282.3508    33    93463.1361    98413.1185   938704    5.30%
 111526 56087    87241.2438    10    93463.1361    98413.1185   953636    5.30%
 115702 56228    88200.0253     4    93463.1361    98413.1185   953889    5.30%
Elapsed time = 419.16 sec. (48829.34 ticks, tree = 449.55 MB, solutions = 58)
 119945 60112    94340.9654    37    93463.1361    98413.1185   976767    5.30%
 124054 62381        cutoff          93463.1361    98413.1185   990033    5.30%
 128228 46196    93618.4224    78    93463.1361    98413.1185  1335660    5.30%
 132037 65145    86977.3848     8    93463.1361    98413.1185  1005791    5.30%
 135769 66724        cutoff          93463.1361    98413.1185  1015326    5.30%
 139336 74207    89309.7243    47    93463.1361    98413.1185  1057448    5.30%
 143010 63950    93639.0113     5    93463.1361    98413.1185  1438642    5.30%
 146880 73990    89266.3908    15    93463.1361    98413.1185  1055653    5.30%
 150364 88219    93330.4611    40    93463.1361    98413.1185  1131913    5.30%
 154190 104331        cutoff          93463.1361    98413.1185  1734924    5.30%
Elapsed time = 422.11 sec. (58368.56 ticks, tree = 825.54 MB, solutions = 58)
 158140 83570    86883.4633     2    93463.1361    98413.1185  1106592    5.30%
 162380 87083    92597.7505    36    93463.1361    98413.1185  1126378    5.30%
 166552 82621    90984.2539    40    93463.1361    98413.1185  1102796    5.30%
 170500 76470        cutoff          93463.1361    98413.1185  1565831    5.30%
 174359 89128    87013.1086    21    93463.1361    98413.1185  1138336    5.30%
 178090 89245    infeasible          93463.1361    98413.1185  1138752    5.30%
 181969 92234    87558.5302     5    93463.1361    98413.1185  1154317    5.30%
 186016 71433    93761.4810    23    93463.1361    98413.1185  1529061    5.30%
 189900 31025    95995.6144    44    93463.1361    98413.1185  1223478    5.30%
 193769 30175    93568.6148     4    93463.1361    98413.1185  1211112    5.30%
Elapsed time = 436.78 sec. (67908.67 ticks, tree = 233.63 MB, solutions = 58)
 197527 32942    93395.9743    21    93463.1361    98413.1185  1242241    5.30%
 201268 32485    94948.3836    56    93463.1361    98413.1185  1243337    5.30%
 204936 84940    96455.1038    33    93463.1361    98413.1185  1615028    5.30%
 208280 101559    93560.7817    40    93463.1361    98413.1185  1716671    5.30%
 211665 35267    95984.4369    37    93463.1361    98413.1185  1262900    5.30%
 214380 36093    93822.1921    52    93463.1361    98413.1185  1271141    5.30%
 217157 36386    96092.9693    36    93463.1361    98413.1185  1272993    5.30%
 220211 38335    95215.6361    34    93463.1361    98413.1185  1284648    5.30%
 223256 41312    94316.3142    45    93463.1361    98413.1185  1304846    5.30%
 226523 101990        cutoff          93463.1361    98413.1185  1720183    5.30%
Elapsed time = 447.48 sec. (77448.77 ticks, tree = 806.75 MB, solutions = 58)
 230259 45331    93599.1260    36    93463.1361    98413.1185  1329521    5.30%
 233908 50164    95701.2545    55    93463.1361    98413.1185  1361215    5.30%
 237466 44490    93802.7101    37    93463.1361    98413.1185  1325121    5.30%
 241032 62635    93618.3579    44    93463.1361    98413.1185  1431821    5.30%
 244457 56580    95221.9982    34    93463.1361    98413.1185  1397675    5.30%
 248128 56664    94812.5399    53    93463.1361    98413.1185  1398449    5.30%
 251355 54704    93374.5768    38    93463.1361    98413.1185  1387257    5.30%
 254532 54393    94920.7692    34    93463.1361    98413.1185  1385474    5.30%
 257753 89278    95300.5010    39    93463.1361    98413.1185  1644547    5.30%
 260825 65583    93835.9532    30    93463.1361    98413.1185  1490781    5.30%
Elapsed time = 458.11 sec. (86988.05 ticks, tree = 511.69 MB, solutions = 58)
 263676 67479    96155.5255    33    93463.1361    98413.1185  1457278    5.30%
 266521 89347    94914.3288    37    93463.1361    98413.1185  1645249    5.30%
 269242 71670    93659.9123    15    93463.1361    98413.1185  1530985    5.30%
 271836 67733    94189.6582    48    93463.1361    98413.1185  1507229    5.30%
 274487 72310    95519.8057    41    93463.1361    98413.1185  1535302    5.30%
 277201 71435    93660.4711    13    93463.1361    98413.1185  1528763    5.30%
 280028 77018    94021.3301    28    93463.1361    98413.1185  1568252    5.30%
 283049 77100    95524.0610    44    93463.1361    98413.1185  1568902    5.30%
 285875 81904    96307.3297    36    93463.1361    98413.1185  1597347    5.30%
 295091 91956    93797.6089    37    93463.1361    98413.1185  1659724    5.30%
Elapsed time = 465.19 sec. (99388.70 ticks, tree = 724.55 MB, solutions = 58)
 304801 96497    93654.3625     5    93463.1361    98413.1185  1684781    5.30%
 315205 102951    95304.0307    43    93463.1361    98413.1185  1723572    5.30%
 320418 133672    infeasible          93463.1361    96645.1962  1926745    3.40%
 324172  1028    94033.4489    34    93463.1361    96645.1962  1951608    3.40%
 330667  4979    96303.1180    47    93463.1361    96645.1962  1999807    3.40%
 337516  7947    94488.7881    51    93463.1361    96645.1962  2033372    3.40%
 348694 20293    93688.2439    36    93463.1361    96645.1962  2118855    3.40%
 366647 26701    93634.1927     3    93649.5562    96620.2804  2151006    3.17%
 381291 24920    93722.9081    27    93649.5562    96578.4283  2197225    3.13%
 390011 31739    94415.1878    50    93649.5562    96497.4869  2282332    3.04%
Elapsed time = 594.08 sec. (141453.26 ticks, tree = 229.51 MB, solutions = 59)
 398829 34829        cutoff          93649.5562    96362.6124  2326475    2.90%
 410809 38694    94190.2559    25    93649.5562    96362.6124  2385849    2.90%

GUB cover cuts applied:  1
Cover cuts applied:  32
Implied bound cuts applied:  32
Flow cuts applied:  119
Mixed integer rounding cuts applied:  11
Zero-half cuts applied:  2
Gomory fractional cuts applied:  18

Root node processing (before b&c):
  Real time             =    6.16 sec. (3806.03 ticks)
Parallel b&c, 32 threads:
  Real time             =  604.17 sec. (146221.40 ticks)
  Sync time (average)   =    3.58 sec.
  Wait time (average)   =    0.57 sec.
                          ------------
Total (root+branch&cut) =  610.33 sec. (150027.43 ticks)

Solution pool: 59 solutions saved.

MIP - Deterministic time limit exceeded, integer feasible:  Objective =  9.3649556183e+04
Current MIP best bound =  9.6214064916e+04 (gap = 2564.51, 2.74%)
Solution time =  610.36 sec.  Iterations = 2446721  Nodes = 411452 (43719)
Deterministic time = 150027.58 ticks  (245.80 ticks/sec)

CPLEX> Incumbent solution written to file 'C:\Users\llavin\Desktop\competitiveMPEC_dev1.27\logs\tmpfloy7de9.cplex.sol'.
CPLEX> Exporting results... 
